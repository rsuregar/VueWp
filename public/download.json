{"status":"ok","count":5,"count_total":5,"pages":1,"posts":[{"id":26,"type":"post","slug":"best-vue-js-datatables","url":"http:\/\/localhost\/wordpress\/2019\/02\/12\/best-vue-js-datatables\/","status":"publish","title":"Best Vue.js Datatables","title_plain":"Best Vue.js Datatables","content":"\n<p>Datatables are a complex beast. If you ever built data-heavy business applications, you will probably know it&#8217;s not easy to make them readable and clear. A datatable\u00a0component\u00a0needs to be flexible enough to adapt to your dataset and use cases.<\/p>\n\n\n\n<p>I&#8217;ve collected some of my favourite datatable components for Vue.js in this article!<\/p>\n\n\n\n<p>I&#8217;ll keep the list updated if I find a shiny new one! If you think I should include one in particular, just email me (<a href=\"mailto:armin@nifty.at?ref=madewithvuejs.com\">armin@nifty.at<\/a>).<\/p>\n\n\n\n<p><em>last updated: 04.02.2019<\/em><\/p>\n\n\n\n<h2>Enso Datatable<\/h2>\n\n\n\n<p>The Enso Datatable lets you create complex tables based on JSON templates.<\/p>\n\n\n\n<p>It supports server-side data loading and Excel exporting. Out-of-the-box functions range from searching, sorting and pagination to front-end translations and customization of column visibility.<\/p>\n\n\n\n<p>This datatable&nbsp;uses Bulma for its layout, and has a few other dependencies for some of its functions. You can use it as part of the whole Enso ecosystem, which provides you with an SPA boilerplate. If you don&#8217;t need that, you can use the datatable independently, too.<\/p>\n","excerpt":"<p>Datatables are a complex beast. If you ever built data-heavy business applications, you will probably know it&#8217;s not easy to make them readable and clear. A datatable\u00a0component\u00a0needs to be flexible enough to adapt to your dataset and use cases. I&#8217;ve collected some of my favourite datatable components for Vue.js in this article! I&#8217;ll keep the [&hellip;]<\/p>\n","date":"2019-02-12 09:42:58","modified":"2019-02-12 09:42:58","categories":[{"id":5,"slug":"ui-components","title":"UI Components","description":"","parent":0,"post_count":3}],"tags":[],"author":{"id":1,"slug":"root","name":"root","first_name":"","last_name":"","nickname":"root","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"closed","thumbnail":null,"custom_fields":{},"thumbnail_size":"post-thumbnail","thumbnail_images":null},{"id":22,"type":"post","slug":"advanced-vue-js-debugging-via-vuejsdevelopers","url":"http:\/\/localhost\/wordpress\/2019\/02\/12\/advanced-vue-js-debugging-via-vuejsdevelopers\/","status":"publish","title":"Advanced Vue.js Debugging [via vuejsdevelopers]","title_plain":"Advanced Vue.js Debugging [via vuejsdevelopers]","content":"\n<p>Hi, If you can\u00a0<strong>read a\u00a0documentation and debug your code<\/strong>, you have the\u00a0<strong>most important skills of a developer<\/strong>\u00a0down. These skills are so important for me that they were the only ones we put as\u00a0<em>required<\/em>\u00a0in a job offer for our own company.<\/p>\n\n\n\n<p>Debugging gets especially valuable when a framework is doing so much of the basic work for you as Vue.js does: It is easy to write your code on top of it, but it&#8217;s hard to locate an error on a deeper level.<\/p>\n\n\n\n<p>This is why I loved this&nbsp;<strong>Detective Story about Debugging<\/strong>&nbsp;by Kevin Ball on vuejsdevelopers.com. He walks you through his steps of problem-solving:<\/p>\n\n\n\n<p><a target=\"_blank\" href=\"https:\/\/madewithvuejs.com\/bgo\/advanced-vue-js-debugging-via-vuejsdevelopers\" rel=\"noreferrer noopener\">Read about Kevin&#8217;s Debugging Journey<\/a><\/p>\n","excerpt":"<p>Hi, If you can\u00a0read a\u00a0documentation and debug your code, you have the\u00a0most important skills of a developer\u00a0down. These skills are so important for me that they were the only ones we put as\u00a0required\u00a0in a job offer for our own company. Debugging gets especially valuable when a framework is doing so much of the basic work [&hellip;]<\/p>\n","date":"2019-02-12 09:38:42","modified":"2019-02-12 10:17:08","categories":[{"id":5,"slug":"ui-components","title":"UI Components","description":"","parent":0,"post_count":3}],"tags":[],"author":{"id":1,"slug":"root","name":"root","first_name":"","last_name":"","nickname":"root","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","custom_fields":{}},{"id":12,"type":"post","slug":"our-first-saas-application-using-vue-js-via-alka-web-com","url":"http:\/\/localhost\/wordpress\/2019\/02\/12\/our-first-saas-application-using-vue-js-via-alka-web-com\/","status":"publish","title":"Our first SaaS application using Vue.js","title_plain":"Our first SaaS application using Vue.js","content":"\n<p>Ini adalah postingan ketiga yang saya buat pada urutan keempat. sebenarnya, postingan ini sudah saya rencakan pertama kali untuk diupload pada bagian kedua.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https:\/\/s.w.org\/images\/core\/emoji\/11\/svg\/1f680.svg\" alt=\"\ud83d\ude80\"\/><\/figure>\n\n\n\n<p>In this article, I am going to share with you guys some development practices we adopted while building our first complete Entreprise Software Web Application using&nbsp;<a href=\"https:\/\/vuejs.org\/\">Vue.js<\/a>. We have been through a long nerdy journey crafting&nbsp;<a href=\"https:\/\/feedier.com\/?utm_medium=article&amp;utm_source=blog&amp;utm_campaign=Blog-Brand-awareness-2018-03-11&amp;utm_content=blogArticleVueJS\">Feedier<\/a>.<br>In a nutshell, Feedier lets you collect valuable Feedback from your customers.&nbsp;We challenge you to understand your customers and engage with them through our reward and engagement programs. Brand unique &amp; enjoyable surveys. Value, engage, respect &amp; reward your customers!&nbsp;<\/p>\n\n\n\n<p>Enough sales talk, let\u2019s dive right in.<\/p>\n\n\n\n<h2>Consistency matters<\/h2>\n\n\n\n<p>One of Vue.js core features are the object\u2019s lifecycle.&nbsp;These give you utter control over what you want to do or set off, and when you want to.<br>While building our application, although we had our internal best practices, .vue files making up our app started to get longer, and we could have rapidly lost track. Developers tend to use these hooks differently, for different purposes and would lay them out differently.<br>For instance, some developers are keen on using the&nbsp;<em>mounted<\/em>&nbsp;hook for most of their data\/API related code, while others would do that in the&nbsp;<em>created<\/em>&nbsp;hook. So you end up with inconsistency between your files.<br>That\u2019s when it started to be dreadful for us.<\/p>\n\n\n\n<p><strong>Bottom line? Discuss and agree on how you want to structure your files and use your framework\u2019s features beforehand.<\/strong><\/p>\n\n\n\n<h2>Plan your features ahead<\/h2>\n\n\n\n<p>Is your application going to be translated? How are you going to handle the login and safety in your app? How would you design your database? These are question examples you should ask yourself before typing in any code. They are typically the kind of things we tend to implement later down the line, or tend to simply knock out, and by doing that, you increase your likeliness of breaking things. As a rule of thumb, don\u2019t put these guys off and face them right from the inception!<\/p>\n\n\n\n<h2>And don\u2019t trick yourself<\/h2>\n\n\n\n<p>If you get started on your first project, your team is most likely made of developers, or in other words, people eager to \u201cbuild things\u201d, and that would easily tend to forget about the main objectives: getting that application up on the market. It\u2019s easy and attracting to implement stuff as soon as the idea comes in.<br>But, would your target be interested in such feature? Is it expecting it in the beta version? And are your customers willing to pay for this supposedly \u2018awesome\u2019 feature? In other word, would that be a USP?<br>The further you\u2019re going away from your initial offer, the more you\u2019re delaying your launch date.<br>One recommendation? Sure, get feedback, add features when everyone is convinced about their usefulness and requirement, but hold back from sinking your team in.<br>We\u2019ve dragged our development phased on \u2013 and it could have been cut way off.<\/p>\n\n\n\n<h2>Get yourself up to speed with your tools<\/h2>\n\n\n\n<p>When working on a team project, because you\u2019re using one tool doesn\u2019t necessarily mean that you get a grasp over it. Maybe it comes from a teammates, maybe you used to be comfortable with it but haven\u2019t used it in a while, whatever is your the reason, you need to get yourself up to speed!<br>Most of today\u2019s modern tools are getting updated so often that we tend to miss important and stunning new features.<br>The point is, read the doc again, be confortable, it will save you time on the long run. Instead of rustling up a workaround, or looking for a solution in the doc, you will be confident from the beginning on.<\/p>\n\n\n\n<p>Just to give you an example, at the beginning of our Feedier journey, we almost missed the Events Bus at the outset, so we were kinda coming up with our solution. And then we found out about that, so we changed everything. Worth doing it, but still, it could have saved us some hassles to do it from scratch.<\/p>\n\n\n\n<h2>Forget about console.log<\/h2>\n\n\n\n<p>Just shedding some lights into the available alternatives and why you would ditch your favorite&nbsp;<em>console.log&nbsp;<\/em>trick.<br>Again, Vue offers its stunning development tool \u2013&nbsp;<a href=\"https:\/\/github.com\/vuejs\/vue-devtools\">Vue.js devtools<\/a>&nbsp;\u2013 available on Chrome and Firefox. This plugin gives you extreme flexibility and definitely cut the development time back! Among other, it gives you the ability to tweak data value, navigate straight to the Vue.js component from the DOM inspector, flick through the different Events, and, first and foremost, gives you the data and computed properties values.<br>For instance, while building our&nbsp;<em>onboarding<\/em>&nbsp;widgets, instead of fiddling with our API to mock some data and make sure the onboarded attribute was always false, we simply had to change its value in the browser. Easy peasy!<\/p>\n\n\n\n<p>Toggling a boolean or change a data relying on a bunch of conditions, events and some API calls becomes a no-brainer.<\/p>\n","excerpt":"<p>Ini adalah postingan ketiga yang saya buat pada urutan keempat. sebenarnya, postingan ini sudah saya rencakan pertama kali untuk diupload pada bagian kedua. In this article, I am going to share with you guys some development practices we adopted while building our first complete Entreprise Software Web Application using&nbsp;Vue.js. We have been through a long [&hellip;]<\/p>\n","date":"2019-02-12 08:00:12","modified":"2019-02-12 08:00:12","categories":[{"id":2,"slug":"random","title":"Random","description":"","parent":0,"post_count":1}],"tags":[],"author":{"id":1,"slug":"root","name":"root","first_name":"","last_name":"","nickname":"root","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","custom_fields":{}},{"id":7,"type":"post","slug":"the-state-of-javascript-2018-report-via-stateofjs-com","url":"http:\/\/localhost\/wordpress\/2019\/02\/04\/the-state-of-javascript-2018-report-via-stateofjs-com\/","status":"publish","title":"The State of JavaScript 2018 [Report via stateofjs.com]","title_plain":"The State of JavaScript 2018 [Report via stateofjs.com]","content":"\n<p>The State of JavaScript report shows data from a survey of 20.000 developers. They were asked about what frameworks and libraries they use, and how they feel about the current state of JavaScript. The results are very interesting, and show that devs using Vue.js (and also React) are usually happy with their choice. <\/p>\n\n\n\n<p>Devs love Vue.js for it&#8217;s easy learning curve, as well as it&#8217;s general programming style \/ patterns and the good documentation. The team behind the report: Sacha Greif, Raphael Benitte and Michael Rambeau!<\/p>\n","excerpt":"<p>The State of JavaScript report shows data from a survey of 20.000 developers. They were asked about what frameworks and libraries they use, and how they feel about the current state of JavaScript. The results are very interesting, and show that devs using Vue.js (and also React) are usually happy with their choice. Devs love [&hellip;]<\/p>\n","date":"2019-02-04 17:41:14","modified":"2019-02-12 10:17:20","categories":[{"id":5,"slug":"ui-components","title":"UI Components","description":"","parent":0,"post_count":3}],"tags":[{"id":3,"slug":"kedua","title":"kedua","description":"","post_count":1},{"id":4,"slug":"post","title":"post","description":"","post_count":1}],"author":{"id":1,"slug":"root","name":"root","first_name":"","last_name":"","nickname":"root","url":"","description":""},"comments":[],"attachments":[],"comment_count":0,"comment_status":"open","thumbnail":null,"custom_fields":{},"thumbnail_size":"post-thumbnail","thumbnail_images":null},{"id":6,"type":"post","slug":"building-a-hangman-game-with-vue-js-via-30platforms","url":"http:\/\/localhost\/wordpress\/2019\/02\/04\/building-a-hangman-game-with-vue-js-via-30platforms\/","status":"publish","title":"Building a Hangman Game with Vue.js [via 30Platforms]","title_plain":"Building a Hangman Game with Vue.js [via 30Platforms]","content":"\n<p>Welcome to WordPress. This is your first post. Edit or delete it, then start writing!<\/p>\n\n\n\n<p>Working on a project that you are motivated to build is one of the most effective ways to learn how to code. This is a fun little project to learn about Vue.js, HTML and CSS. Click New Game above to try the finished product.<\/p>\n\n\n\n<h3 id=\"introduction-to-vue-js\">Introduction to Vue.js<\/h3>\n\n\n\n<p><a href=\"https:\/\/vuejs.org\/\" target=\"_blank\" rel=\"noreferrer noopener\">Vue.js<\/a>&nbsp;is an extremely powerful and fast Javascript framework that is also easy to learn. You can use it to develop everything from complex single page applications to simple sites.<\/p>\n\n\n\n<p>To build the Hangman game, we will explore a few of Vue\u2019s core features:<\/p>\n\n\n\n<ul><li><strong>Declarative Rendering and Template Syntax<\/strong>. This simply means that if we declare a Javascript property to be set to a value, Vue will render it on the page. Then if the property is changed later, Vue will detect the change and reactively update the page.<\/li><li><strong>List Rendering<\/strong>. You can use the&nbsp;<code>v-for<\/code>&nbsp;Vue directive to iterate an array and render individual items from a list.<\/li><li><strong>Event Handling and Methods<\/strong>. With Vue you can listen for events, such as a button click and then handle those events with Javascript methods.<\/li><li><strong>Conditional Rendering<\/strong>. Showing and hiding things based on&nbsp;<code>v-if<\/code>conditionals is also easily accomplished with Vue.<\/li><\/ul>\n\n\n\n<h3 id=\"building-the-hangman-game\">Building the Hangman Game<\/h3>\n\n\n\n<p>You can find the source code for building the Hangman game at&nbsp;<a href=\"https:\/\/github.com\/30platforms\/vue-hangman-game\" target=\"_blank\" rel=\"noreferrer noopener\">github.com\/30platforms\/vue-hangman-game<\/a>&nbsp;and at&nbsp;<a href=\"https:\/\/codepen.io\/30platforms\/pen\/MGNaOm\" target=\"_blank\" rel=\"noreferrer noopener\">codepen\/30platforms<\/a>.<\/p>\n\n\n\n<p>The following sections look at the above core Vue concepts in a little more detail and explain how they are used in the Hangman game.<\/p>\n\n\n\n<h3 id=\"declarative-rendering-with-lists\">Declarative Rendering with Lists<\/h3>\n\n\n\n<p>We use Vue\u2019s declarative rendering and template syntax to render lists throughout the Hangman game. This is accomplished by using double mustache brackets like&nbsp;<code>{{ someData }}<\/code>&nbsp;in our HTML template and referring to data from our Vue instance.<\/p>\n","excerpt":"<p>Welcome to WordPress. This is your first post. Edit or delete it, then start writing! Working on a project that you are motivated to build is one of the most effective ways to learn how to code. This is a fun little project to learn about Vue.js, HTML and CSS. Click New Game above to [&hellip;]<\/p>\n","date":"2019-02-04 17:14:48","modified":"2019-02-12 10:17:43","categories":[],"tags":[],"author":{"id":1,"slug":"root","name":"root","first_name":"","last_name":"","nickname":"root","url":"","description":""},"comments":[{"id":2,"name":"A WordPress Commenter","url":"https:\/\/wordpress.org\/","date":"2019-02-04 17:14:48","content":"<p>Hi, this is a comment.<br \/>\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.<br \/>\nCommenter avatars come from <a href=\"https:\/\/gravatar.com\" rel=\"nofollow\">Gravatar<\/a>.<\/p>\n","parent":0}],"attachments":[],"comment_count":1,"comment_status":"open","custom_fields":{}}],"query":{"ignore_sticky_posts":true}}